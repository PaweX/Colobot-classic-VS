How to...

1. Compile the game with Visual Studio 12 or newer.
  1. Download and install DirectX 8.1 SDK. It can be difficult to find it now as it is old SDK, but here is a working download link:
     http://dl.dropbox.com/u/32866936/dx81sdk_full.exe
     (I used DirectX libraries and header files from the Windows Kits folder on my system drive (Windows Kits\8.1),
     however I also needed d3dx.lib - I used d3dx9.lib instead, taken from DirectX SDK (June 2010).
     If you want to use d3dx.lib you need to open colobot project and in project properties->Linker->Additional Dependencies
     you need to change d3dx9.lib to d3dx.lib. Also I used dinput8.lib and to use it I had to change two lines of code in 
     joystick.cpp)   
  2. Open Colobot.sln in the Visual Studio and choose if you want to compile the project in debug or release mode.
  3. Make sure that your Visual Studio knows the paths to DirectX libraries and header files.
  4. Compile the project. The binaries should appear in the bin folder.

2. Compile the game with MinGW.

  1. Download and install DirectX 8.1 SDK. It can be difficult to find it now as it is old SDK, but here is a working dowload link:
     http://dl.dropbox.com/u/32866936/dx81sdk_full.exe
  2. Download and install MinGW and MSYS:
      http://sourceforge.net/projects/mingw/files/Installer/mingw-get-inst/mingw-get-inst-20111118/
     When installing, select all available components.
  3. Download and install CMake:
      http://www.cmake.org/cmake/resources/software.html (the Windows zip file)
     Unpack the contents of the archive to where MinGW is installed (files from bin/ should go into bin/, etc.)
  4. In the file src/CMakeLists.txt, change "set(DXSDK_DIR "c:/dxsdk") to the directory, where you have DirectX SDK
     (the slashes must be in this form: /, not \).
  5. Run MinGW console from the shortcut in menu start.
  6. Change to the directory where you have the Colobot sources by typing "cd /c/where/the/sources/are"
  7. Type "cmake -G 'MSYS Makefiles' ."
  8. Type "make"
  9. Everything should compile without errors.

3. Run the compiled game.

  1. Download and unpack the package with the game data files.
  2. Copy the compiled files from bin/colobot.exe, bin/CBot/libCBot.dll (or CBot.dll)
     and from the directory, where MinGW is installed bin/libgcc_s_dw2-1.dll and bin/libstdc++-6.dll
     to the directory with game data (there should be several files named colobot*.dat).
  3. Create a shortcut to the colobot.exe executable and add to the executed command " -nocd" option.
  4. Run the shortcut and enjoy the game.

4. But the game doesn't have letters, it's blank! Probably your game is compiled under different language than the
language pack you have installed. How to change the language?

  1. In the source code, find language.h file and change the line #define FRENCH TRUE to #define FRENCH FALSE and do the reverse
     on on the language of your choice (English, German or Polish).
  2. Recompile the game and copy bin/colobot.exe.
  3. In the directory with game data switch the directories scene, script and help with those from the directory of given language
    (e.g. english/).
  4. Run the game.


PL

Jak...

1. Skompilować projekt pod Visual Studio.
  Jeśli nie wiesz i nie znasz angielskiego, a chcesz żebym napisał jak skompilować, to daj mi znać.
  
  Generalnie..
  1. Musisz mieć DirectX SDK w wersji 8.1, ale ja użyłem bibliotek zainstalowanych w Windows Kits\8.1 i też działa.
  Brakuje tylko d3dx.lib - ale ja użyłem d3dx9.lib, które wziąłem z DirectX SDK (June 2010).
  2. Dalej tylko otwierasz projekt Colobot.sln i kompilujesz pod debug lub release. Upewnij się, że Visual Studio wie,
  gdzie znajdują się pliki nagłówkowe i biblioteki od DirectX.
  3. Po udanej kompilacji, pliki binarne powinny pojawić się w folderze bin.

2. Skompilować projekt pod MinGW.

  1. Ściągamy i instalujemy DirectX SDK w wersji 8.1. Może być problem ze znalezieniem linka bo to już stary SDK, ale można ściągnąć stąd:
     http://dl.dropbox.com/u/32866936/dx81sdk_full.exe
  2. Ściągamy i instalujemy MinGW i MSYS:
     http://sourceforge.net/projects/mingw/files/Installer/mingw-get-inst/mingw-get-inst-20111118/
     Przy instalacji zaznaczamy wszystkie komponenty do instalacji.
  3. Ściągamy i instalujemy CMake:
     http://www.cmake.org/cmake/resources/software.html (plik zip dla Windowsa)
     Zip rozpakowujemy do katalogu, gdzie zainstalowany jest MinGW (pliki z bin/ mają trafić do bin/ itd.).
  4. W pliku src/CMakeLists.txt zmieniamy set(DXSDK_DIR "c:/dxsdk") na katalog, gdzie jest zainstalowany DirectX SDK (w wersji 8.1)
     (slashe mają być właśnie w takiej postaci: / a nie \).
  5. Uruchamiamy MinGW console ze skrótu w menu start.
  6. Przechodzimy do katalogu, gdzie są źródła wpisując "cd /c/tam/gdzie/sa/zrodla"
  7. Wpisujemy "cmake -G 'MSYS Makefiles' ."
  8. Wpisujemy "make"
  9. Wszystko powinno się skomplikować bez błędów.

3. Uruchomić skompilowaną grę.

  1. Ściągamy paczkę z plikami danych gry.
  2. Kopiujemy skompilowane pliki bin/colobot.exe, bin/CBot/libCBot.dll (lub CBot.dll)
     i z katalogu, gdzie jest zainstalowany MinGW bin/libgcc_s_dw2-1.dll i bin/libstdc++-6.dll
     do katalogu z plikami danych (powinno być tam kilka plików colobot*.dat).
  3. Tworzymy skrót do colobot.exe, przy czym w wywoływanej komendzie dopisujemy na końcu opcję " -nocd".
  4. Odpalamy skrót i cieszymy się grą.

4. Ale gra nie ma liter! Może skompilowałeś grę nie w tym języku? Jak zmienić język?

  1. W kodzie źródłowym znajdujemy plik language.h i zmieniamy  #define FRENCH TRUE na #define FRENCH FALSE i robimy odwrotnie
     dla wybranego języka (angielski, niemiecki lub polski).
  2. Kompilujemy od nowa grę i kopiujemy bin/colobot.exe.
  3. W katalogu z plikami danych podmieniamy katalogi scene, script i help z tymi z katalogu danego języka (np. english/).
  4. Odpalamy grę.
